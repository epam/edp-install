global:
  version: "2.10.0"
  edpName: "stub-namespace"
  platform: "kubernetes"
  dnsWildCard: "stub.com"
  admins:
    - "stub_user_one@example.com"
  developers:
    - "stub_user_one@example.com"
    - "stub_user_two@example.com"
  database:
    deploy: true
    image: "postgres:9.6"
    imagePullPolicy: "IfNotPresent"
    host: "edp-db"
    name: "edp-db"
    port: 5432
    storage:
      class: gp2
      size: 2Gi
    resources:
      limits:
        memory: 512Mi
      requests:
        cpu: 50m
        memory: 64Mi
    annotations: {}
    nodeSelector: {}
    tolerations: []
    affinity: {}
  webConsole:
    # Cluster URL, e.g. https://xxxxxxxxxxxxxxxxxxxx.sk1.eu-central-1.eks.amazonaws.com
    url:
  kioskEnabled: true

edp:
  adminGroups:
    - "stub-group-admin"
  developerGroups:
    - "stub-group-developer"

perf:
  enabled: "false"

vcs:
  enabled: "false"

# AWS IAM role with push access to ECR e.g. arn:aws:iam::<AWS_ACCOUNT_ID>:role/<AWS_IAM_ROLE_NAME>
kanikoRoleArn:

dockerRegistry:
  url: "<AWS_ACCOUNT_ID>.dkr.ecr.<AWS_REGION>.amazonaws.com"

annotations: {}

keycloak-operator:
  enabled: true
  # image:
  #   name: epamedp/keycloak-operator
  #   version:
  keycloak:
    url: "keycloak.example.com"

codebase-operator: 
  enabled: true
  # image:
  #   name: epamedp/codebase-operator
  #   version:
  # jira:
  #   integration: false
  #   name: "jira"
  #   apiUrl: "https://jiraeu-api.example.com"
  #   rootUrl: "https://jiraeu.example.com"
  #   credentialName: "jira-user"

jenkins-operator:
  enabled: true
  # image:
  #   name: epamedp/jenkins-operator
  #   version:
  # jenkins:
  #   deploy: true
  #   image: epamedp/edp-jenkins
  #   version:
  #   storage:
  #     class: gp2
  #     size: 10Gi
  #   initImage:
  #   sharedLibraries:
  #     - name: "edp-library-stages"
  #       url: "https://github.com/epam/edp-library-stages.git"
  #       tag: "master"
  #     - name: "edp-library-pipelines"
  #       url: "https://github.com/epam/edp-library-pipelines.git"
  #       tag: "master"
  # xample of using private repository:
  #     - name: "stub-name"
  #       url: "stub-url"
  #       tag: "stub-tag"
  #       secret: "stub-secret-name"
  #       type: "ssh" # can be "ssh", "password" or "token"
  #   pullSecrets:
  #   basePath: ""

cd-pipeline-operator:
  enabled: true
  # image:
  #   name: epamedp/cd-pipeline-operator
  #   version:

nexus-operator:
  enabled: true
  # image:
  #   name: epamedp/nexus-operator
  #   version:
  # nexus:
  #   deploy: true
  #   name: "nexus"
  #   image: "sonatype/nexus3"
  #   version:
  #   basePath: ""
  #   imagePullSecrets:
  #   storage:
  #     class: gp2
  #     size: 10Gi

sonar-operator:
  enabled: true
#  image:
#    name: epamedp/sonar-operator
#    version:
#  sonar:
#    deploy: true
#    name: "sonar"
#    image: "sonarqube"
#    version:
#    initImage: "busybox"
#    dbImage: "postgres:9.6"
#    storage:
#      data:
#        class: gp2
#        size: 1Gi
#      database:
#        class: gp2
#        size: 1Gi
#     imagePullSecrets:
#     basePath: ""

admin-console-operator:
  enabled: true
  # image:
  #   name: epamedp/admin-console-operator
  #   version:
  # adminConsole:
  #   image: epamedp/edp-admin-console
  #   version:
  #   envs:
  #     - name: INTEGRATION_STRATEGIES
  #       value: "Create,Clone,Import"
  #     - name: BUILD_TOOLS
  #       value: "maven"
  #     # DEPLOYMENT_SCRIPT value can be helm-chart or openshift-template or both helm-chart,openshift-template
  #     - name: DEPLOYMENT_SCRIPT
  #       value: "helm-chart"
  #     - name: VERSIONING_TYPES
  #       value: "default,edp"
  #     - name: CI_TOOLS
  #       value: "Jenkins,GitLab CI"
  #     - name: PERF_DATA_SOURCES
  #       value: "Sonar,Jenkins,GitLab"
  #   imagePullSecrets:
  #   basePath: ""
  #    projectUrlMask: "/console/project/{namespace}/overview"
  #    imageStreamUrlMask: "/console/project/{namespace}/browse/images/{stream}"

gerrit-operator:
  enabled: true
  # image:
  #   name: epamedp/gerrit-operator
  #   version:
  # gerrit:
  #   deploy: true
  #   name: "gerrit"
  #   image: "openfrontier/gerrit"
  #   sshPort: "22"
  #   version:
  #   imagePullSecrets:
  #   storage:
  #     size: 1Gi
  #     class: gp2

reconciler:
  enabled: true
  # image:
  #   name: epamedp/reconciler
  #   version:

perf-operator:
  enabled: true
  # image:
  #   name: epamedp/perf-operator
  #   version:
  # perf:
  #   integration: false
  #   name: "perf"
  #   apiUrl: "https://perf.delivery.example.com"
  #   rootUrl: "https://perf.delivery.example.com"
  #   credentialName: "perf-user"
  #   projectName: "PROJECT-NAME"
  #   luminate:
  #     enabled: false
  #     apiUrl: "https://api.example.luminatesec.com"
  #     credentialName: "luminate-secret"

# define EDPComponents, more details: https://github.com/epam/edp-component-operator/
EDPComponents: {}
  # - prometheus:
  #     url: https://ingress-prometheus.example.com
  #     visible: true
  #     icon: icon_in_base64
  # - kibana:
  #     url: https://ingress-kibana.example.com
  #     visible: false
  #     icon: icon_in_base64
  # - another_tool:
  #     url: https://ingress-anothertool.example.com
  #     visible: true
  #     icon: icon_in_base64
