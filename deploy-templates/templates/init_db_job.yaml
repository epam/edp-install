apiVersion: batch/v1
kind: Job
metadata:
  labels:
    {{- include "edp-install.labels" . | nindent 4 }}
  name: db-init
spec:
  backoffLimit: 25
  template:
    metadata:
      name: db-init
      labels:
        app: {{.Values.global.database.name}}
    spec:
      restartPolicy: Never
      {{- with .Values.global.database.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.global.database.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.global.database.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - image: {{.Values.global.database.image}}
          name: db-init
          command:
            - "/bin/bash"
            - "-c"
            - "psql -h $(PGHOST) -d $(POSTGRES_DB) -U $(POSTGRES_USER) -c 'CREATE SCHEMA IF NOT EXISTS \"{{.Values.global.edpName}}\"; \
              DO \
              $do$ \
              BEGIN \
                 IF NOT EXISTS (SELECT 1 FROM pg_user WHERE usename = '\u005C''\u0027'$(TENANT_ADMIN_USERNAME)'\u005C''\u0027') THEN \
                    CREATE USER \"$(TENANT_ADMIN_USERNAME)\" WITH PASSWORD '\u005C''\u0027'$(TENANT_ADMIN_PASSWORD)'\u005C''\u0027'; \
                 END IF; \
              END \
              $do$; \
              GRANT ALL PRIVILEGES ON SCHEMA \"{{.Values.global.edpName}}\" TO \"$(TENANT_ADMIN_USERNAME)\"';"
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: super-admin-db
                  key: username
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: super-admin-db
                  key: password
            - name: TENANT_ADMIN_USERNAME
              valueFrom:
                secretKeyRef:
                  name: db-admin-console
                  key: username
            - name: TENANT_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-admin-console
                  key: password
            - name: POSTGRES_DB
              value: {{.Values.global.database.name}}
            - name: PGHOST
              value: {{.Values.global.database.host}}
      initContainers:
        - image: {{.Values.global.database.image}}
          name: db-wait
          command:
            - /bin/bash
            - -c
            - while ! pg_isready -d $(POSTGRES_DB) -h $(PGHOST) -U $(POSTGRES_USER)  </dev/null; do echo waiting for edp-install-wizard;
              sleep 10; done;
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: super-admin-db
                  key: username
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: super-admin-db
                  key: password
            - name: TENANT_ADMIN_USERNAME
              valueFrom:
                secretKeyRef:
                  name: db-admin-console
                  key: username
            - name: TENANT_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-admin-console
                  key: password
            - name: POSTGRES_DB
              value: {{.Values.global.database.name}}
            - name: PGHOST
              value: {{.Values.global.database.host}}
