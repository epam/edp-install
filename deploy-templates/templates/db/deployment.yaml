{{- if .Values.global.database.deploy }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{.Values.global.database.name}}
  labels:
    app: {{.Values.global.database.name}}
    {{- include "edp-install.labels" . | nindent 4 }}
  {{- with .Values.global.database.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  selector:
    matchLabels:
      app: {{.Values.global.database.name}}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{.Values.global.database.name}}
    spec:
      {{- with .Values.global.database.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.global.database.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.global.database.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  key: username
                  name: super-admin-db
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: super-admin-db
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: POSTGRES_DB
              value: {{.Values.global.database.name}}
          image: {{.Values.global.database.image}}
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - exec pg_isready --host $POD_IP -U postgres -d postgres
            failureThreshold: 5
            initialDelaySeconds: 20
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 5
          name: {{.Values.global.database.name}}
          ports:
            - containerPort: {{.Values.global.database.port}}
              name: db
              protocol: TCP
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - exec pg_isready --host $POD_IP -U postgres -d postgres
            failureThreshold: 3
            initialDelaySeconds: 20
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 3
          resources:
{{ toYaml .Values.global.database.resources | indent 12 }}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: {{.Values.global.database.name}}
      securityContext:
        runAsUser: 999
        runAsNonRoot: true
        fsGroup: 999
      serviceAccountName: edp-db
      volumes:
        - name: {{.Values.global.database.name}}
          persistentVolumeClaim:
            claimName: {{.Values.global.database.name}}
{{end}}
